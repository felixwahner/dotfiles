#
# Prompt theme
#

txtrst='\033[m'     # Reset
# -------------------------- Normal colors
txtblk='\033[0;30m' # Black
txtred='\033[0;31m' # Red
txtgrn='\033[0;32m' # Green
txtylw='\033[0;33m' # Yellow
txtblu='\033[0;34m' # Blue
txtpur='\033[0;35m' # Purple
txtcyn='\033[0;36m' # Cyan
txtwht='\033[0;37m' # White
# -------------------------- Bold colors
bldblk='\033[1;30m' # Black
bldred='\033[1;31m' # Red
bldgrn='\033[1;32m' # Green
bldylw='\033[1;33m' # Yellow
bldblu='\033[1;34m' # Blue
bldpur='\033[1;35m' # Purple
bldcyn='\033[1;36m' # Cyan
bldwht='\033[1;37m' # White

# __git_ps1 settings
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="verbose"

# Detect status of git repo to colorize according
git_color() {
  status=$(git status --porcelain 2> /dev/null)
  if [ "$status" ]; then
    color=${bldred}
  else
    color=${txtgrn}
  fi
  printf $color
}

# Detect Ruby version
ruby_info() {
  if command -v rbenv 1> /dev/null
  then
    printf "`rbenv version | cut -f1 -d ' '`"
  elif command -v rvm 1> /dev/null
  then
    printf "$(rvm-prompt v p)"
  fi
}

# Detect Rails version
rails_info() {
  if [ -e ./app/controllers/application_controller.rb ]; then
    printf "$(grep -m 1 -e rails Gemfile | cut -f 3 -d ' ' | tr -d [\'])@"
  fi
}

# Base prompt
BP="\n${txtwht}[\u@\h]${txtcyn}"

# Ruby and Rails
RR="${bldblk}[\$(rails_info)\$(ruby_info)]"

# Prompt itself
PS1="$BP \w\$(git_color)\$(__git_ps1 ' (%s)') $RR ${txtrst}\n> "

